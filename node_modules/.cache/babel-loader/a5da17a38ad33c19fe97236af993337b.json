{"ast":null,"code":"var _jsxFileName = \"/home/salman/Projects/React/react-http-redux/src/containers/Products.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport ProductItem from '../components/ProductItem';\n\nlet ProductsList = props => {\n  // let data = \"\";\n  if (props.loading) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, \"Loading ...\")); // data = <h3>Loading ...</h3>\n  } else if (props.products) {\n    console.log(props.products);\n    return props.products.map((item, index) => {\n      return React.createElement(\"div\", {\n        key: \"\".concat(index),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, \"// \", React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, \"hello\"), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, \"Name: \"), \"item.name // \", React.createElement(ProductItem, {\n        product: item[index],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }));\n    }); // data = <span>{JSON.stringify(props.products)}</span>\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }); // return <div>{data}</div>;\n};\n\nconst mapStateToProps = state => ({\n  products: state.products,\n  loading: state.loading\n});\n\nexport default connect(mapStateToProps, null)(ProductsList);","map":{"version":3,"sources":["/home/salman/Projects/React/react-http-redux/src/containers/Products.js"],"names":["React","connect","ProductItem","ProductsList","props","loading","products","console","log","map","item","index","mapStateToProps","state"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;;AAEA,IAAIC,YAAY,GAAIC,KAAD,IAAW;AAE1B;AACA,MAAIA,KAAK,CAACC,OAAV,EAAmB;AACf,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAL,CAAP,CADe,CAEf;AACH,GAHD,MAGO,IAAGD,KAAK,CAACE,QAAT,EAAmB;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACE,QAAlB;AACA,WAAOF,KAAK,CAACE,QAAN,CAAeG,GAAf,CAAmB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACnC,aACI;AAAK,QAAA,GAAG,YAAKA,KAAL,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADH,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,mBAGO,oBAAC,WAAD;AAAa,QAAA,OAAO,EAAED,IAAI,CAACC,KAAD,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHP,CADJ;AAOH,KARE,CAAP,CAFsB,CAWtB;AACH;;AACD,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP,CAnB0B,CAoB1B;AACH,CArBD;;AAuBA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAChCP,EAAAA,QAAQ,EAAEO,KAAK,CAACP,QADgB;AAEhCD,EAAAA,OAAO,EAAEQ,KAAK,CAACR;AAFiB,CAAZ,CAAxB;;AAKA,eAAeJ,OAAO,CAClBW,eADkB,EAElB,IAFkB,CAAP,CAGbT,YAHa,CAAf","sourcesContent":["\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport ProductItem from '../components/ProductItem'\n\nlet ProductsList = (props) => {\n    \n    // let data = \"\";\n    if (props.loading) {\n        return <div><h3>Loading ...</h3></div>\n        // data = <h3>Loading ...</h3>\n    } else if(props.products) {\n        console.log(props.products);\n        return props.products.map((item, index) => {\n                return (\n                    <div key={`${index}`}>\n                    // <h1>hello</h1>\n                        <h3>Name: </h3>item.name\n                        // <ProductItem product={item[index]} />\n                    </div>\n                )\n            });\n        // data = <span>{JSON.stringify(props.products)}</span>\n    }\n    return <div></div>\n    // return <div>{data}</div>;\n}\n\nconst mapStateToProps = (state) => ({\n    products: state.products,\n    loading: state.loading\n})\n\nexport default connect(\n    mapStateToProps,\n    null\n)(ProductsList)\n\n"]},"metadata":{},"sourceType":"module"}