{"ast":null,"code":"export const PRE_REQUEST = 'PRE_REQUEST';\nexport const POST_REQUEST = 'POST_REQUEST';\nexport const getProducts = products => ({\n  type: 'ADD_PRODUCTS',\n  data: products\n});\nexport const requestPosts = () => ({\n  type: PRE_REQUEST\n});\nexport const receivedPosts = json => ({\n  type: RECEIVE_POSTS,\n  json: json.articles\n});\nexport function fetchProducts(page = 1, limit = 10) {\n  return function (dispatch) {\n    dispatch(PRE_REQUEST);\n    return fetch(\"https://backendapi.turing.com/products?page=\".concat(page, \"&limit=\").concat(limit, \"&description_length=200\")).then(response => response.json()).then(json => {\n      dispatch(getProducts(json.rows));\n    }).catch(error => console.log('An error occurred.', error));\n  };\n}","map":{"version":3,"sources":["/home/salman/Projects/React/react-http-redux/src/actions/index.js"],"names":["PRE_REQUEST","POST_REQUEST","getProducts","products","type","data","requestPosts","receivedPosts","json","RECEIVE_POSTS","articles","fetchProducts","page","limit","dispatch","fetch","then","response","rows","catch","error","console","log"],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAG,aAApB;AACP,OAAO,MAAMC,YAAY,GAAG,cAArB;AAEP,OAAO,MAAMC,WAAW,GAAIC,QAAD,KAAe;AACxCC,EAAAA,IAAI,EAAE,cADkC;AAExCC,EAAAA,IAAI,EAAEF;AAFkC,CAAf,CAApB;AAKP,OAAO,MAAMG,YAAY,GAAG,OAAO;AACjCF,EAAAA,IAAI,EAAEJ;AAD2B,CAAP,CAArB;AAIP,OAAO,MAAMO,aAAa,GAAGC,IAAI,KAAK;AACpCJ,EAAAA,IAAI,EAAEK,aAD8B;AAEpCD,EAAAA,IAAI,EAAEA,IAAI,CAACE;AAFyB,CAAL,CAA1B;AAKP,OAAO,SAASC,aAAT,CAAuBC,IAAI,GAAG,CAA9B,EAAiCC,KAAK,GAAG,EAAzC,EAA6C;AAClD,SAAO,UAAUC,QAAV,EAAoB;AAC3BA,IAAAA,QAAQ,CAACd,WAAD,CAAR;AACC,WAAOe,KAAK,uDAAgDH,IAAhD,oBAA8DC,KAA9D,6BAAL,CACHG,IADG,CACEC,QAAQ,IAAIA,QAAQ,CAACT,IAAT,EADd,EAEHQ,IAFG,CAEGR,IAAD,IAAU;AACdM,MAAAA,QAAQ,CAACZ,WAAW,CAACM,IAAI,CAACU,IAAN,CAAZ,CAAR;AACD,KAJG,EAKHC,KALG,CAKIC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCF,KAAlC,CALb,CAAP;AAMA,GARD;AASD","sourcesContent":["export const PRE_REQUEST = 'PRE_REQUEST';\nexport const POST_REQUEST = 'POST_REQUEST';\n\nexport const getProducts = (products) => ({\n  type: 'ADD_PRODUCTS',\n  data: products,\n});\n\nexport const requestPosts = () => ({\n  type: PRE_REQUEST,\n});\n\nexport const receivedPosts = json => ({\n  type: RECEIVE_POSTS,\n  json: json.articles,\n});\n\nexport function fetchProducts(page = 1, limit = 10) {\n  return function (dispatch) {\n  dispatch(PRE_REQUEST)\n   return fetch(`https://backendapi.turing.com/products?page=${page}&limit=${limit}&description_length=200`)\n      .then(response => response.json())\n      .then((json) => {\n        dispatch(getProducts(json.rows));\n      })\n      .catch( error => console.log('An error occurred.', error),);\n  };\n}\n"]},"metadata":{},"sourceType":"module"}